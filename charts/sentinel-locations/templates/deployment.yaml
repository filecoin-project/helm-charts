apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ include "sentinel-locations.fullname" . }}
  labels:
    app: "sentinel-locations"
    suite: sentinel
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
spec:
  schedule: "{{ .Values.schedule }}"
  concurrencyPolicy: Forbid
  jobTemplate:
    metadata:
      labels:
        app: "sentinel-locations"
        suite: sentinel
        chart: {{ .Chart.Name }}-{{ .Chart.Version }}
        heritage: {{ .Release.Service }}
        release: {{ .Release.Name }}
        cronjob: {{ include "sentinel-locations.fullname" . }}
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        app: sentinel-locations
        suite: sentinel
        chart: {{ .Chart.Name }}-{{ .Chart.Version }}
        heritage: {{ .Release.Service }}
        release: {{ .Release.Name }}
    spec:
      template:
        metadata:
          labels:
            app: sentinel-locations
            suite: sentinel
        spec:
          restartPolicy: OnFailure
          {{- with .Values.imagePullSecrets }}
          imagePullSecrets:
            {{- toYaml . | nindent 8 }}
          {{- end }}
          serviceAccountName: ""
          securityContext:
            {{- toYaml .Values.podSecurityContext | nindent 12 }}
          containers:
            - name: "sentinel-locations"
              securityContext:
                {{- toYaml .Values.securityContext | nindent 16 }}
              image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
              imagePullPolicy: Always
              env:
                - name: PGPASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: {{ .Values.pgSecret }}
                      key: password
                - name: PGUSER
                  valueFrom:
                    secretKeyRef:
                      name: {{ .Values.pgSecret }}
                      key: user
                - name: PGHOST
                  valueFrom:
                    secretKeyRef:
                      name: {{ .Values.pgSecret }}
                      key: host
                - name: PGPORT
                  valueFrom:
                    secretKeyRef:
                      name: {{ .Values.pgSecret }}
                      key: port
                - name: PGDATABASE
                  valueFrom:
                    secretKeyRef:
                      name: {{ .Values.pgSecret }}
                      key: database
                - name: SENTINEL_DB
                  value: "postgres://$(PGUSER):$(PGPASSWORD)@$(PGHOST):$(PGPORT)/$(PGDATABASE)?sslmode={{ .Values.pgSSLMode }}"

          {{- with .Values.nodeSelector }}
          nodeSelector:
            {{- toYaml . | nindent 8 }}
          {{- end }}
          {{- with .Values.affinity }}
          affinity:
            {{- toYaml . | nindent 8 }}
          {{- end }}
          {{- with .Values.tolerations }}
          tolerations:
            {{- toYaml . | nindent 8 }}
          {{- end }}
