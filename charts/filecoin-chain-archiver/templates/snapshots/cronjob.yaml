apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: {{ include "filecoin-chain-archiver.snapshots.fullname" . }}
  labels:
    {{- include "filecoin-chain-archiver.snapshots.labels" . | nindent 4 }}
spec:
  schedule: {{ .Values.snapshots.schedule | quote }}
  concurrencyPolicy: Allow
  startingDeadlineSeconds: 300
  jobTemplate:
    spec:
      backoffLimit: 1
      activeDeadlineSeconds: {{ .Values.snapshots.activeDeadlineSeconds }}
      template:
        spec:
          {{- with .Values.imagePullSecrets }}
          imagePullSecrets:
            {{- toYaml . | nindent 8 }}
          {{- end }}
          serviceAccountName: {{ include "filecoin-chain-archiver.snapshots.serviceAccountName" . }}
          restartPolicy: Never
          volumes:
          - name: config-volume
            configMap:
              name: {{ include "filecoin-chain-archiver.snapshots.fullname" . }}-config
              items:
              - key: config.toml
                path: config.toml
          - name: jwt-token-volume
            secret:
              secretName: {{ .Values.snapshots.jwtTokens.secretName }}
              optional: false
              items:
              - key: {{ .Values.snapshots.jwtTokens.key }}
                path: token
          containers:
          - name: filecoin-chain-archiver
            image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
            imagePullPolicy: {{ .Values.image.pullPolicy }}
            command:
              - filecoin-chain-archiver
            args:
              - create
            env:
            - name: FCA_CREATE_NODELOCKER_API
              value: "/dns/{{ include "filecoin-chain-archiver.nodelocker.fullname" . }}/tcp/5100"
            - name: FCA_LOG_LEVEL
              value: {{ .Values.snapshots.logging.level | quote }}
            {{- if .Values.snapshots.logging.named }}
            - name: FCA_LOG_LEVEL_NAMED
              value: {{ include "filecoin-chain-archiver.snapshots.logLevelNamed" . | quote }}
            {{- end }}
            - name: FCA_CONFIG_PATH
              value: "/config/config.toml"
            - name: FCA_CREATE_INTERVAL
              value: {{ .Values.snapshots.interval | quote }}
            - name: FCA_CREATE_CONFIDENCE
              value: {{ .Values.snapshots.confidence | quote }}
            {{- if .Values.snapshots.uploads.enabled }}
            - name: FCA_CREATE_BUCKET
              value: {{ .Values.snapshots.uploads.bucket }}
            - name: FCA_CREATE_BUCKET_ENDPOINT
              value: {{ .Values.snapshots.uploads.endpoint }}
            - name: FCA_CREATE_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "filecoin-chain-archiver.snapshots.secretName" . }}
                  key: ACCESS_KEY
            - name: FCA_CREATE_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "filecoin-chain-archiver.snapshots.secretName" . }}
                  key: SECRET_KEY
            {{- else }}
            - name: FCA_CREATE_DISCARD
              value: "true"
            {{- end }}
            {{- with .Values.snapshots.additionalEnv }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
            volumeMounts:
            - name: config-volume
              mountPath: /config/config.toml
              subPath: config.toml
              readOnly: true
            - name: jwt-token-volume
              mountPath: /secrets
              readOnly: true
            resources:
              {{- toYaml .Values.snapshots.resources | nindent 14 }}
        {{- with .Values.snapshots.nodeSelector }}
        nodeSelector:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with .Values.snapshots.affinity }}
        affinity:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- with .Values.snapshots.tolerations }}
        tolerations:
          {{- toYaml . | nindent 10 }}
        {{- end }}
