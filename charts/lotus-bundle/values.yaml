# required:
# Your application. Replace with your own details.

# This is the image and repo of *YOUR* application.
image:
  repository: nginx
  tag: latest
  pullPolicy: Always

# Snapshot-importer is a sidecar that will import a snapshot into the lotus node.
snapshotImporter:
  # snapshotUrl controls where the snapshot is downloaded from.
  # You only need to set this if you want to use a non-mainnet network.
  snapshotUrl: "https://snapshots.mainnet.filops.net/minimal/latest"

application:
  name: "nginx-example"
  labels: []
  replicas:
  # a kubernetes container.
  # hint: https://github.com/kubernetes/api/blob/master/core/v1/types.go#L2227
  container:
    name: application
    command: []
    args: []
    env: []
    resources: {}
    startupProbe: {}
    livenessProbe: {}
    readinessProbe: {}
    ports: []
  secrets:
    - name: example-secret  # helm will create this secret
      keys:
        password: extraspecial
      mount: /here
    - name: external-secret  # a pre-existing secret
      external: true
      mount: /there
  configMaps: []  # same format as secrets
  # define a single service.
  # depreciated.
  # Instead, use services, []service.
  service:
    enabled: false
    type: ClusterIP
    ports:
      - protocol: TCP
        port: 80
        targetPort: 80
        name: http
  ingress:
    enabled: false
    class: nginx
    annotations: {}
    httpRules:
      - host: example.com
        path: /
        servicePort: http
  # a list of services
  # hint: https://github.com/kubernetes/api/blob/master/core/v1/types.go#L4093
  # services: []
  # a list of ingresses
  # hint: https://kubernetes.io/docs/concepts/services-networking/ingress/
  # ingresses: []
  services:
    - type: ClusterIP
      ports:
        - Protocol: TCP
          port: 80
          targetPort: 80
          name: http
    - type: NodePort
      ports:
        - Protocol: TCP
          port: 80
          targetPort: 80
          name: http
  storage:  # storage volume shared between application and lotus node or ipfs node, when enabled.
      # This is the directory where the volume is mounted on your application and in the lotus container.
    - mount: /shared
      # when chownLotus is enabled, the mounted directory will have unix owner changed to "fc"
      # this is required if the lotus daemon should write to this directory. i.e. if you are doing
      # storage deals.
      chownLotus: true
      # when subdirPerRelease is enabled, the root volume is not mounted. Rather, a subdirectory
      # will be created and the subdirectory will be mounted at the provided mount point.
      # One reason you might want to do this is if you have a large, shared NFS, EFS or another ReadWriteMany
      # volume and you want to restrict the pod to write to a private area. Having this enabled is unlikely
      # to cause problems even for single-mount volumes, so it is recommended.
      subdirPerRelease: true
      volume:
        # kubernetes volumes.
        - name: shared-volume
          persistentVolumeClaim:
            claimName: chain-exports

# Any containers in this list will be added to to the pod initContainers.
# ex:
#
# initContainers:
#   - name: setup1
#     command:
#       - command1
#     args: []
#     env: []
#     resources: {}
#     ports: []
#   - name: setup2
#     command:
#       - command2
#     args: []
#     env: []
#     resources: {}
#     ports: []

initContainers: []

volumeClaimTemplates: []

# Wallets are added to the wallet secret.
# if you don't want to specify wallets in values.yaml,
# you can add them later by editing the secret.
# wallets:
#   - address: f3xxxyyy
#     exported: aabbccdd
wallets: []

# lotus configuration
# By default, lotus will run as a full-node. In this mode, it will take
# time to sync the block chain and additiona resources will be needed
# to keep it in sync.
# Lotus can also be run as a lite-node. In this mode, wallets are local
# and lotus clients connect to the same lotus-lite node, but messages
# must be passed to a back-end lotus node. The backend can be a fullnode
# or gateway service you run yourself or a public endpoint
#
# note:
# api.chain.love is a lotus-gateway instance managed by Protocol Labs.
# It provides a limited set of lotus API endpoints.
lotus:
  enabled: true
  lite:
    enabled: false
  image: filecoin/lotus-all-in-one:nightly
  imagePullPolicy: Always
  reset:
    enabled: false
    percent: 90
  env:
    FILECOIN_PARAMETER_CACHE: "/var/tmp/filecoin-proof-parameters"
    LOTUS_PATH: "/var/lib/lotus"
    ## FULLNODE_API_INFO: must be set when lotus.lite.enabled is true
    # FULLNODE_API_INFO: "wss://api.chain.love"

    ## Golang vars
    GOLOG_FORMAT: json

    ## Jaeger Agent configuration
    LOTUS_JAEGER_AGENT_HOST:
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: status.hostIP
    LOTUS_JAEGER_AGENT_PORT: "6831"
  extraEnv: {}
  config:
    create: true
    configMapNameOverride: ""
    content: |-
      [API]
        ListenAddress = "/ip4/127.0.0.1/tcp/1234/http"
      [Chainstore]
        EnableSplitstore = true

# ipfs configuration
# This is not enabled by default
# When enabled, an IPFS daemon will run as a sidecar.
# The API endpoint of this sidecar is reachable by
# the dns name "ipfs". Using a multiaddr, it is reachable
# with this string: /dns/ipfs/tcp/5001/http
ipfs:
  enabled: false
  image: ipfs/go-ipfs:latest
  imagePullPolicy: Always
  size: 10Gi


# Do you want prometheus monitoring with prometheus-operator?
prometheus:
  serviceMonitor: false
  path: /metrics
  port: ""

# Bring your own filebeat.
# The network where you are running might already have great log hadling.
# If it does, there's no need to enable this. For those who need customized
# log handling, this is for you.
#
# Enabling filebeat will install a filebeat sidecar.
# Lotus will write logs to a file so it can be handled by filebeat. If your
# application writes log files as well, filebeat can pick them up.
#
# Some people might not want to include secrets (API tokens, etc) in a values
# file. If this is you, enable "filebeat.external". When this is enabled,
# the rest of the filebeat options are ignored, and you should create the secret
# with your filebeat configuration on your own.
# hint: see templates/filebeat-config.yaml
#
# The example config works with logz.io.
# Configuration tips:
# hint: https://www.elastic.co/guide/en/beats/filebeat/current/filebeat-reference-yml.html
filebeat:
  enabled: false
  external: false
  externalSecret: yoursecretname
  image: store/elastic/filebeat:7.13.2
  path: /var/log/app
  secrets:
    - name: logzio-certs
      keys:
        SectigoRSADomainValidationSecureSerA.crt: |
          -----BEGIN CERTIFICATE-----
          MIIGEzCCA/ugAwIBAgIQfVtRJrR2uhHbdBYLvFMNpzANBgkqhkiG9w0BAQwFADCB
          iDELMAkGA1UEBhMCVVMxEzARBgNVBAgTCk5ldyBKZXJzZXkxFDASBgNVBAcTC0pl
          cnNleSBDaXR5MR4wHAYDVQQKExVUaGUgVVNFUlRSVVNUIE5ldHdvcmsxLjAsBgNV
          BAMTJVVTRVJUcnVzdCBSU0EgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkwHhcNMTgx
          MTAyMDAwMDAwWhcNMzAxMjMxMjM1OTU5WjCBjzELMAkGA1UEBhMCR0IxGzAZBgNV
          BAgTEkdyZWF0ZXIgTWFuY2hlc3RlcjEQMA4GA1UEBxMHU2FsZm9yZDEYMBYGA1UE
          ChMPU2VjdGlnbyBMaW1pdGVkMTcwNQYDVQQDEy5TZWN0aWdvIFJTQSBEb21haW4g
          VmFsaWRhdGlvbiBTZWN1cmUgU2VydmVyIENBMIIBIjANBgkqhkiG9w0BAQEFAAOC
          AQ8AMIIBCgKCAQEA1nMz1tc8INAA0hdFuNY+B6I/x0HuMjDJsGz99J/LEpgPLT+N
          TQEMgg8Xf2Iu6bhIefsWg06t1zIlk7cHv7lQP6lMw0Aq6Tn/2YHKHxYyQdqAJrkj
          eocgHuP/IJo8lURvh3UGkEC0MpMWCRAIIz7S3YcPb11RFGoKacVPAXJpz9OTTG0E
          oKMbgn6xmrntxZ7FN3ifmgg0+1YuWMQJDgZkW7w33PGfKGioVrCSo1yfu4iYCBsk
          Haswha6vsC6eep3BwEIc4gLw6uBK0u+QDrTBQBbwb4VCSmT3pDCg/r8uoydajotY
          uK3DGReEY+1vVv2Dy2A0xHS+5p3b4eTlygxfFQIDAQABo4IBbjCCAWowHwYDVR0j
          BBgwFoAUU3m/WqorSs9UgOHYm8Cd8rIDZsswHQYDVR0OBBYEFI2MXsRUrYrhd+mb
          +ZsF4bgBjWHhMA4GA1UdDwEB/wQEAwIBhjASBgNVHRMBAf8ECDAGAQH/AgEAMB0G
          A1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAbBgNVHSAEFDASMAYGBFUdIAAw
          CAYGZ4EMAQIBMFAGA1UdHwRJMEcwRaBDoEGGP2h0dHA6Ly9jcmwudXNlcnRydXN0
          LmNvbS9VU0VSVHJ1c3RSU0FDZXJ0aWZpY2F0aW9uQXV0aG9yaXR5LmNybDB2Bggr
          BgEFBQcBAQRqMGgwPwYIKwYBBQUHMAKGM2h0dHA6Ly9jcnQudXNlcnRydXN0LmNv
          bS9VU0VSVHJ1c3RSU0FBZGRUcnVzdENBLmNydDAlBggrBgEFBQcwAYYZaHR0cDov
          L29jc3AudXNlcnRydXN0LmNvbTANBgkqhkiG9w0BAQwFAAOCAgEAMr9hvQ5Iw0/H
          ukdN+Jx4GQHcEx2Ab/zDcLRSmjEzmldS+zGea6TvVKqJjUAXaPgREHzSyrHxVYbH
          7rM2kYb2OVG/Rr8PoLq0935JxCo2F57kaDl6r5ROVm+yezu/Coa9zcV3HAO4OLGi
          H19+24rcRki2aArPsrW04jTkZ6k4Zgle0rj8nSg6F0AnwnJOKf0hPHzPE/uWLMUx
          RP0T7dWbqWlod3zu4f+k+TY4CFM5ooQ0nBnzvg6s1SQ36yOoeNDT5++SR2RiOSLv
          xvcRviKFxmZEJCaOEDKNyJOuB56DPi/Z+fVGjmO+wea03KbNIaiGCpXZLoUmGv38
          sbZXQm2V0TP2ORQGgkE49Y9Y3IBbpNV9lXj9p5v//cWoaasm56ekBYdbqbe4oyAL
          l6lFhd2zi+WJN44pDfwGF/Y4QA5C5BIG+3vzxhFoYt/jmPQT2BVPi7Fp2RBgvGQq
          6jG35LWjOhSbJuMLe/0CjraZwTiXWTb2qHSihrZe68Zk6s+go/lunrotEbaGmAhY
          LcmsJWTyXnW0OMGuf1pGg+pRyrbxmRE1a6Vqe8YAsOf4vmSyrcjC8azjUeqkk+B5
          yOGBQMkKW+ESPMFgKuOXwIlCypTPRpgSabuY0MLTDXJLR27lk8QyKGOHQ+SwMj4K
          00u/I5sUKUErmgQfky3xxzlIPK1aEn8=
          -----END CERTIFICATE-----
      mount: /certs
  config: |
    ############################# Filebeat #####################################
    filebeat.inputs:
    - type: log
      paths:
        - /var/log/app/*
        - /var/lib/lotus/journal/*
      fields:
        logzio_codec: plain
        token: abc123
        type: lotus
      fields_under_root: true
      encoding: utf-8
      ignore_older: 3h
    processors:
    - rename:
        fields:
         - from: "agent"
           to: "beat_agent"
        ignore_missing: true
    - rename:
        fields:
         - from: "log.file.path"
           to: "source"
        ignore_missing: true

    ############################# Output ##########################################
    output:
      logstash:
        hosts:
          - "listener.logz.io:5015"
        ssl:
          certificate_authorities:
            - "/certs/SectigoRSADomainValidationSecureSerA.crt"
