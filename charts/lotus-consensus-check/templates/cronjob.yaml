---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ .Release.Name }}-consensus-check
  namespace: {{ .Release.Namespace }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{ .Release.Name }}-consensus-check
rules:
- apiGroups: [""]
  resources: ["services"]
  verbs: ["get", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ .Release.Name }}-consensus-check
  namespace: {{ .Release.Namespace }}
roleRef:
  kind: Role
  name: {{ .Release.Name }}-consensus-check
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: {{ .Release.Name }}-consensus-check
  namespace: {{ .Release.Namespace }}
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ .Release.Name }}-consensus-check
spec:
  schedule: {{ .Values.schedule | quote }}
  jobTemplate:
    metadata:
      labels:
        cronjob: {{ .Release.Name }}-consensus-check
    spec:
      template:
        spec:
          serviceAccountName: {{ .Release.Name }}-consensus-check
          restartPolicy: Never
          securityContext:
            fsGroup: 532
            runAsNonRoot: true
            runAsUser: 532
            runAsGroup: 532
          initContainers:
          - name: find-nodes
            image: bitnami/kubectl
            command: ["bash", "-c"]
            args:
              - |
                kubectl get service -l app=lotus-fullnode-app -o jsonpath='{range .items[?(@.spec.type=="ClusterIP")]}/ip4/{.spec.clusterIP}/tcp/{.spec.ports[?(@.name=="api")].port}/http{"\n"}{end}' | tee -a /tmp/scratch/multiaddrs
            volumeMounts:
            - name: {{ .Release.Name }}-scratch
              mountPath: "/tmp/scratch"
          containers:
          - name: consensus-check
            image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
            imagePullPolicy: {{ .Values.image.pullPolicy }}
            command: ["bash", "-c"]
            args:
              - |
                set -xe
                pushd /tmp/scratch
                cat multiaddrs

                lotus-shed consensus check --height {{ .Values.height }} --lookback {{ .Values.lookback }} multiaddrs
                popd
            volumeMounts:
            - name: {{ .Release.Name }}-scratch
              mountPath: "/tmp/scratch"
          volumes:
          - name: {{ .Release.Name }}-scratch
            emptyDir:
              medium: Memory
