---
{{- if ne .Values.deploymentType "cluster" }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}-lily
  labels:
    {{- include "sentinel-lily.allLabels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  serviceName: {{ .Release.Name }}-lily-daemon-service
  podManagementPolicy: {{ .Values.podManagementPolicy | default "Parallel" | quote }}
  selector:
    matchLabels:
      {{- include "sentinel-lily.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "sentinel-lily.allLabels" . | nindent 8 }}
    spec:
      {{- include "sentinel-lily.common-lily-affinity-selectors" . | nindent 6 }}
      imagePullSecrets:
      - name: regcred
      initContainers:
      - name: init-datastore
        image: {{ include "sentinel-lily.docker-image" . | quote }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command: ["/bin/sh", "-c"]
        args:
        {{- include "sentinel-lily.initialize-datastore-script" . | nindent 10 }}
        env:
        - name: GOLOG_LOG_FMT
          value: {{ .Values.logFormat | default "json" | quote }}
        - name: LILY_REPO
          value: "/var/lib/lily"
        volumeMounts:
        - name: repo-volume
          mountPath: /var/lib/lily
        - name: config-volume
          mountPath: /var/lib/lily/config.toml
          subPath: config.toml
          readOnly: true
        {{- if .Values.daemon.volumes.datastore.enabled }}
        - name: datastore-volume
          mountPath: /var/lib/lily/datastore
        {{- end }}
        resources:
          # resources required to initialize the datastore are small
          {{- (include "sentinel-lily.minimal-resources" .) | indent 10 }}
      containers:
      - name: daemon
        image: {{ include "sentinel-lily.docker-image" . | quote }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command: ["lily"]
        args:
        - daemon
        {{- range .Values.daemon.args }}
        - {{ . }}
        {{- end }}
        env:
        {{- include "sentinel-lily.jaegerTracingEnvvars" . | indent 8 }}
        - name: GOLOG_LOG_FMT
          value: {{ .Values.logFormat | default "json" | quote }}
        - name: GOLOG_LOG_LEVEL
          value: {{ .Values.logLevel | default "info" | quote }}
        {{- if .Values.logLevelNamed }}
        - name: LILY_LOG_LEVEL_NAMED
          value: {{ .Values.logLevelNamed | quote }}
        {{- end }}
        - name: LILY_REPO
          value: "/var/lib/lily"
        - name: LILY_CONFIG
          value: "/var/lib/lily/config.toml"
        {{- range .Values.daemon.storage.postgresql }}
        - name: LILY_STORAGE_POSTGRESQL_{{ .name | upper }}_URL
          valueFrom:
            secretKeyRef:
              name: {{ required "expected secret name which holds postgres connection url" .secretName }}
              key: {{ .secretKey | default "url" }}
        {{- end }}
        {{- with .Values.daemon.env }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
        ports:
        - containerPort: 1234
          name: api
        - containerPort: 1347
          name: p2p
        {{- if .Values.prometheusOperatorServiceMonitor }}
        - containerPort: 9991
          name: metrics
        {{- end }}
        volumeMounts:
        - name: repo-volume
          mountPath: /var/lib/lily
        - name: config-volume
          mountPath: /var/lib/lily/config.toml
          subPath: config.toml
          readOnly: true
        - name: waitjob-script-volume
          mountPath: /var/lib/lily/waitjob.sh
          subPath: waitjob.sh
        {{- if .Values.daemon.volumes.datastore.enabled }}
        - name: datastore-volume
          mountPath: /var/lib/lily/datastore
        {{- end }}
        lifecycle:
          postStart:
            exec:
              command:
                - "/bin/sh"
                - "-c"
                  # lifecycle.postStart.exec.command doesn't accept args
                  # so we execute this script as a multiline string
                - |
                  echo "Waiting for api to become ready..."
                  lily wait-api --timeout={{ .Values.apiWaitTimeout | quote }} > /dev/null 2>&1
                  status=$?
                  if [ $status -ne 0 ]; then
                    exit $status
                  fi

                  # wait 3 minutes to let the node's datastore settle
                  # TODO: configurable value here
                  sleep 180

                  echo "Starting jobs..."
                  {{- range .Values.daemon.jobs }}
                  {{- $values := (dict
                    "instanceName" (include "sentinel-lily.instanceName" $)
                    "jobName" .name
                    "command" .command
                  ) }}
                  lily sync wait && sleep 10 && lily {{ .command }} {{ join " " .args }} {{ include "sentinel-lily.job-name-arg" $values }}

                  status=$?
                  if [ $status -ne 0 ]; then
                    exit $status
                  fi
                  {{- end }}

                  # wait for jobs to begin persisting data
                  # TODO: make this less dumb
                  sleep 60

                  {{ .Values.startCommand }}
        resources:
        {{- if .Values.daemon.resources }}
          {{- toYaml .Values.daemon.resources | nindent 10 }}
        {{- else }}
          # Required resources to run daemon lily are signficant and the below default
          # may be insufficient. Please see https://lilium.sh/software/lily/hardware/
          # for more information.
          requests:
            cpu: "16000m"
            memory: "250Gi"
          limits:
            cpu: "16000m"
            memory: "250Gi"
        {{- end }}
      {{- if .Values.debug.enabled }}
      - name: debug
        image: {{ include "sentinel-lily.docker-image" . | quote }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command: ["/bin/sh", "-c", "tail -f /dev/null"]
        env:
        - name: LILY_REPO
          value: "/var/lib/lily"
        - name: LILY_CONFIG
          value: "/var/lib/lily/config.toml"
        {{- range .Values.daemon.storage.postgresql }}
        - name: LILY_STORAGE_POSTGRESQL_{{ .name | upper }}_URL
          valueFrom:
            secretKeyRef:
              name: {{ required "must have the secret name which holds postgres connection url" .secretName }}
              key: {{ .secretKey | default "url" }}
        {{- end }}
        volumeMounts:
        - name: repo-volume
          mountPath: /var/lib/lily
        - name: config-volume
          mountPath: /var/lib/lily/config.toml
          subPath: config.toml
          readOnly: true
        - name: waitjob-script-volume
          mountPath: /var/lib/lily/waitjob.sh
          subPath: waitjob.sh
        {{- if .Values.daemon.volumes.datastore.enabled }}
        - name: datastore-volume
          mountPath: /var/lib/lily/datastore
        {{- end }}
        resources:
        {{- if .Values.debug.resources }}
          {{- toYaml .Values.debug.resources | nindent 10 }}
        {{- else }}
          # resources required to operate the daemon as a client in this debug
          # container are typically small. Increase this value if you intend to run
          # lily as a deamon to perform indexing.
          # See https://lilium.sh/software/lily/hardware/ for more info.
          {{- (include "sentinel-lily.minimal-resources" .) | indent 10 }}
        {{- end }}
      {{- end }}
      volumes:
      - name: repo-volume
        emptyDir: {}
      - name: config-volume
        configMap:
          name: {{ .Release.Name }}-lily-config
          items:
          - key: config.toml
            path: config.toml
      - name: waitjob-script-volume
        configMap:
          name: {{ .Release.Name }}-lily-waitjob-script
          items:
          - key: waitjob.sh
            path: waitjob.sh
            mode: 0755
  volumeClaimTemplates:
  {{- if .Values.daemon.volumes.datastore.enabled }}
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      name: datastore-volume
    spec:
      accessModes:
      {{- range .Values.daemon.volumes.datastore.accessModes }}
      - {{ . | quote }}
      {{- end }}
      storageClassName: {{ .Values.daemon.volumes.datastore.storageClassName }}
      volumeMode: Filesystem
      resources:
        requests:
          storage: {{ .Values.daemon.volumes.datastore.size | quote }}
      {{- with .Values.daemon.volumes.datastore.dataSource }}
      dataSource:
        {{- toYaml . | nindent 10 }}
      {{- end }}
  {{- end}}
{{- end }}

